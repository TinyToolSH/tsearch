#!/bin/bash

#This file is part of the TinyTools distribution (https://github.com/Calebe94/TinyTools).
#Copyright (C) 2021 TinyTools
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

search_params="tyaml /etc/tinytools/params.yaml"

program=$($search_params -v default.program)
engine=$($search_params -v default.engine)
lang="en"

usage(){
   echo -e "\033[1musage:\033[0m"
   echo -e "tsearch -t \"term\" [-e] engine [-p] program"
   echo -e "\033[1moptions:\033[0m"
   echo -e "\033[1m-t:\033[0m term to search"
   echo -e "\033[1m-e:\033[0m set search engine"
   echo -e "\033[1m-p:\033[0m set program to launch"
   echo -e  "\033[1m-l <engine|program>:\033[0m list engines/programs available"
   echo -e "\033[1mexample:\033[0m"
   echo -e "\033[1m$\033[0m tsearch -t \"free software\" -e duckduckgo -p firefox"
   echo -e "- all search parameters are located in /etc/tinytools/params.yaml"
   exit 0
}

url_encode(){
    old_lc_collate=$LC_COLLATE
    LC_COLLATE=C
    
    local length="${#1}"
    for (( i = 0; i < length; i++ )); do
        local c="${1:i:1}"
        case $c in
            [a-zA-Z0-9.~_-]) printf "$c" ;;
            ' ') printf "+" ;;
            *) printf '%%%02X' "'$c" ;;
        esac
    done
    
    LC_COLLATE=$old_lc_collate
}

list()
{
    case "$1" in
        engine|program)
            echo -e "$($search_params -k "$1")"
            ;;
        default*)
            echo -e "$($search_params -v "$1")"
    esac
    exit 0
}

while getopts p:e:t:hl: option 
do
    case "${option}" in
        p) program=${OPTARG};;
        e) engine=${OPTARG};;
        t) term=$(url_encode "${OPTARG}");; 
        h) usage;;
        l) list "${OPTARG}";;
    esac
done

if [ -n "$term" ]; then
    get_query(){
        query=$($search_params -v engine."$1".query)
        echo "${query/TERM/$term}"
    }

    command=$($search_params -v program."$program".command)
    $command $(get_query $engine)
else
    echo "no term declared"
fi

