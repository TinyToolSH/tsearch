#!/bin/sh

#This file is part of the TinyTools distribution (https://github.com/Calebe94/TinyTools).
#Copyright (C) 2021 TinyTools
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

search_params="tyaml /etc/tinytools/params.yaml"

program=$($search_params -v default.program)
engine=$($search_params -v default.engine)

usage(){
   printf "\033[1musage:\033[0m\n"
   printf "tsearch -t \"term\" [-e] engine [-p] program\n"
   printf "\033[1moptions:\033[0m\n"
   printf "\033[1m-t:\033[0m term to search\n"
   printf "\033[1m-e:\033[0m set search engine\n"
   printf "\033[1m-p:\033[0m set program to launch\n"
   printf "\033[1m-l <engine|program>:\033[0m list engines/programs available\n"
   printf "\033[1mexample:\033[0m\n"
   printf "\033[1m$\033[0m tsearch -t \"free software\" -e duckduckgo -p firefox\n"
   printf -- "- all search parameters are located in /etc/tinytools/params.yaml\n"
   exit 0
}

url_encode(){
    old_lc_collate=$LC_COLLATE
    LC_COLLATE=C
    i=1
    length="${#1}"
    while [ "$i" -le "$length" ]
    do
        c="$(printf '%s' "$1" | cut -c $i)"
        case $c in
            [a-zA-Z0-9.~_-]) printf '%s' "$c" ;;
            ' ') printf "+" ;;
            *) printf '%%%02X' "'$c" ;;
        esac
        i=$((i+1))
    done

    LC_COLLATE=$old_lc_collate
}

list()
{
    case "$1" in
        engine|program)
            printf '%s\n' "$($search_params -k "$1")"
            ;;
        default*)
            printf '%s\n' "$($search_params -v "$1")"
    esac
    exit 0
}

while getopts p:e:t:hl: option
do
    case "${option}" in
        p) program=${OPTARG};;
        e) engine=${OPTARG};;
        t) term=$(url_encode "${OPTARG}");;
        h) usage;;
        l) list "${OPTARG}";;
        *) usage; exit 1 ;;
    esac
done

if [ -n "$term" ]; then
    get_query(){
        query=$($search_params -v engine."$1".query)
        printf '%s' "$query" | sed "s/TERM/$term/g"
    }

    command=$($search_params -v program."$program".command)
    $command "$(get_query "$engine")"
else
    printf '%s' "no term declared"
fi